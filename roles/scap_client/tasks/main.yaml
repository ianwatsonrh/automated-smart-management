---
- name: Install openscap client packages
  ansible.builtin.yum:
    name:
     - openscap-scanner
     - rubygem-foreman_scap_client
    state: present

- name: Get Policy parameters
  ansible.builtin.uri:
    url: "{{ satellite_server_url }}/api/v2/compliance/policies"
    method: GET
    user: "{{ satellite_username }}"
    password:  "{{ satellite_password }}"
    force_basic_auth: yes
    body_format: json
    validate_certs: False
  register: policies
  no_log: "{{ satellite_operations_scap_client_secure_logging }}"

- name: Build policy {{ policy_name }} parameters
  set_fact:
    policy: "{{ policy | default([]) | combine ([item]) }}"
  loop: "{{policies.json.results}}"
  when: item.name in policy_name or policy_name == 'all'

- name: Fail if no policy found with required name
  fail:
  when: policy is not defined

- set_fact: 
    scap_content_id_dict: "{{ scap_content_id_dict | default({}) | combine ({ item.key : item.value }) }}"
  with_dict: "{{ policy }}"
  when: item.key == "scap_content_id"

- set_fact: 
    tailoring_file_id_dict: "{{ tailoring_file_id_dict | default({}) | combine ({ item.key : item.value }) }}"
  with_dict: "{{ policy }}"
  when: item.key == "tailoring_file_id"

- name: Get scap content information
  ansible.builtin.uri:
    url: "{{ satellite_server_url }}/api/v2/compliance/scap_contents/{{item.value}}"
    method: GET
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    body_format: json
    validate_certs: False
  register: scapcontents
  with_dict: "{{ scap_content_id_dict }}"
  when: item.key == "scap_content_id"
  no_log: "{{ satellite_operations_scap_client_secure_logging }}"

- name: Get tailoring content information
  ansible.builtin.uri:
    url: "{{ satellite_server_url }}/api/v2/compliance/tailoring_files/{{item.value}}"
    method: GET
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    force_basic_auth: yes
    body_format: json
    validate_certs: False
  register: tailoringfiles
  when: item.key == "tailoring_file_id" and item.value | int > 0 | d(False)
  with_dict: "{{ tailoring_file_id_dict }}"
  no_log: "{{ satellite_operations_scap_client_secure_logging }}"

- name: Build scap content parameters
  set_fact:
    scap_content: "{{ scap_content | default({}) | combine({item.json.id: item.json }) }}"
  loop: "{{ scapcontents.results }}"

- name: Build tailoring content parameters
  set_fact:
    tailoring_files: "{{ tailoring_files | default({}) | combine({item.json.id: item.json }) }}"
  when: item.json is defined
  loop: "{{ tailoringfiles.results }}"

- name: Apply openscap client configuration template
  ansible.builtin.template:
    src: openscap_client_config.yaml.j2
    dest: /etc/foreman_scap_client/config.yaml
    mode: 0644
    owner: root
    group: root

#- name: Configure execution crontab
#  ansible.builtin.cron:
#    name: "Openscap Execution"
#    cron_file: 'foreman_openscap_client'
#    job: '/usr/bin/foreman_scap_client {{policy.id}} > /dev/null'
#    weekday: "{{crontab_weekdays}}"
#    hour: "{{crontab_hour}}"
#    minute: "{{crontab_minute}}"
#    user: root
